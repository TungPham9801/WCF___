//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.CTOrderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CTOrderService.ICTOrderService")]
    public interface ICTOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/DoWork", ReplyAction="http://tempuri.org/ICTOrderService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/DoWork", ReplyAction="http://tempuri.org/ICTOrderService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/getCTOder", ReplyAction="http://tempuri.org/ICTOrderService/getCTOderResponse")]
        System.Data.DataTable getCTOder(int maOder, string maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/getCTOder", ReplyAction="http://tempuri.org/ICTOrderService/getCTOderResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getCTOderAsync(int maOder, string maBan);
        
        // CODEGEN: Generating message contract since the wrapper name (GetCTOder) of message GetCTOderRequest does not match the default value (GetCTOder1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/GetCTOder", ReplyAction="http://tempuri.org/ICTOrderService/GetCTOderResponse")]
        QuanLiCaPhe.CTOrderService.GetCTOderResponse GetCTOder1(QuanLiCaPhe.CTOrderService.GetCTOderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/GetCTOder", ReplyAction="http://tempuri.org/ICTOrderService/GetCTOderResponse")]
        System.Threading.Tasks.Task<QuanLiCaPhe.CTOrderService.GetCTOderResponse> GetCTOder1Async(QuanLiCaPhe.CTOrderService.GetCTOderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraMon", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraMonResponse")]
        bool kiemTraMon(string MaMon, string maBan, int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraMon", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraMonResponse")]
        System.Threading.Tasks.Task<bool> kiemTraMonAsync(string MaMon, string maBan, int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraGoiMon", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraGoiMonResponse")]
        bool kiemTraGoiMon(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraGoiMon", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraGoiMonResponse")]
        System.Threading.Tasks.Task<bool> kiemTraGoiMonAsync(int maOder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraBan", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraBanResponse")]
        bool kiemTraBan(int soBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/kiemTraBan", ReplyAction="http://tempuri.org/ICTOrderService/kiemTraBanResponse")]
        System.Threading.Tasks.Task<bool> kiemTraBanAsync(int soBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/layDVT", ReplyAction="http://tempuri.org/ICTOrderService/layDVTResponse")]
        string layDVT(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/layDVT", ReplyAction="http://tempuri.org/ICTOrderService/layDVTResponse")]
        System.Threading.Tasks.Task<string> layDVTAsync(string maMon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/laySoBan", ReplyAction="http://tempuri.org/ICTOrderService/laySoBanResponse")]
        string laySoBan(string MaBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/laySoBan", ReplyAction="http://tempuri.org/ICTOrderService/laySoBanResponse")]
        System.Threading.Tasks.Task<string> laySoBanAsync(string MaBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/laySLMon", ReplyAction="http://tempuri.org/ICTOrderService/laySLMonResponse")]
        string laySLMon(string maMon, string maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/laySLMon", ReplyAction="http://tempuri.org/ICTOrderService/laySLMonResponse")]
        System.Threading.Tasks.Task<string> laySLMonAsync(string maMon, string maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/ThemCTOder", ReplyAction="http://tempuri.org/ICTOrderService/ThemCTOderResponse")]
        bool ThemCTOder(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/ThemCTOder", ReplyAction="http://tempuri.org/ICTOrderService/ThemCTOderResponse")]
        System.Threading.Tasks.Task<bool> ThemCTOderAsync(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/NhapSoLuong", ReplyAction="http://tempuri.org/ICTOrderService/NhapSoLuongResponse")]
        bool NhapSoLuong(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/NhapSoLuong", ReplyAction="http://tempuri.org/ICTOrderService/NhapSoLuongResponse")]
        System.Threading.Tasks.Task<bool> NhapSoLuongAsync(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/XoaMon", ReplyAction="http://tempuri.org/ICTOrderService/XoaMonResponse")]
        bool XoaMon(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/XoaMon", ReplyAction="http://tempuri.org/ICTOrderService/XoaMonResponse")]
        System.Threading.Tasks.Task<bool> XoaMonAsync(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/XoaCTOder", ReplyAction="http://tempuri.org/ICTOrderService/XoaCTOderResponse")]
        bool XoaCTOder(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/XoaCTOder", ReplyAction="http://tempuri.org/ICTOrderService/XoaCTOderResponse")]
        System.Threading.Tasks.Task<bool> XoaCTOderAsync(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/ChuyenBan", ReplyAction="http://tempuri.org/ICTOrderService/ChuyenBanResponse")]
        bool ChuyenBan(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/ChuyenBan", ReplyAction="http://tempuri.org/ICTOrderService/ChuyenBanResponse")]
        System.Threading.Tasks.Task<bool> ChuyenBanAsync(DTO_QLCP.CTOder ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/layMaMon", ReplyAction="http://tempuri.org/ICTOrderService/layMaMonResponse")]
        string layMaMon(string maOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTOrderService/layMaMon", ReplyAction="http://tempuri.org/ICTOrderService/layMaMonResponse")]
        System.Threading.Tasks.Task<string> layMaMonAsync(string maOrder);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCTOder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCTOderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string maBan;
        
        public GetCTOderRequest() {
        }
        
        public GetCTOderRequest(string maBan) {
            this.maBan = maBan;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCTOderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCTOderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataTable GetCTOderResult;
        
        public GetCTOderResponse() {
        }
        
        public GetCTOderResponse(System.Data.DataTable GetCTOderResult) {
            this.GetCTOderResult = GetCTOderResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTOrderServiceChannel : QuanLiCaPhe.CTOrderService.ICTOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTOrderServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.CTOrderService.ICTOrderService>, QuanLiCaPhe.CTOrderService.ICTOrderService {
        
        public CTOrderServiceClient() {
        }
        
        public CTOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public System.Data.DataTable getCTOder(int maOder, string maBan) {
            return base.Channel.getCTOder(maOder, maBan);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getCTOderAsync(int maOder, string maBan) {
            return base.Channel.getCTOderAsync(maOder, maBan);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QuanLiCaPhe.CTOrderService.GetCTOderResponse QuanLiCaPhe.CTOrderService.ICTOrderService.GetCTOder1(QuanLiCaPhe.CTOrderService.GetCTOderRequest request) {
            return base.Channel.GetCTOder1(request);
        }
        
        public System.Data.DataTable GetCTOder1(string maBan) {
            QuanLiCaPhe.CTOrderService.GetCTOderRequest inValue = new QuanLiCaPhe.CTOrderService.GetCTOderRequest();
            inValue.maBan = maBan;
            QuanLiCaPhe.CTOrderService.GetCTOderResponse retVal = ((QuanLiCaPhe.CTOrderService.ICTOrderService)(this)).GetCTOder1(inValue);
            return retVal.GetCTOderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<QuanLiCaPhe.CTOrderService.GetCTOderResponse> QuanLiCaPhe.CTOrderService.ICTOrderService.GetCTOder1Async(QuanLiCaPhe.CTOrderService.GetCTOderRequest request) {
            return base.Channel.GetCTOder1Async(request);
        }
        
        public System.Threading.Tasks.Task<QuanLiCaPhe.CTOrderService.GetCTOderResponse> GetCTOder1Async(string maBan) {
            QuanLiCaPhe.CTOrderService.GetCTOderRequest inValue = new QuanLiCaPhe.CTOrderService.GetCTOderRequest();
            inValue.maBan = maBan;
            return ((QuanLiCaPhe.CTOrderService.ICTOrderService)(this)).GetCTOder1Async(inValue);
        }
        
        public bool kiemTraMon(string MaMon, string maBan, int maOder) {
            return base.Channel.kiemTraMon(MaMon, maBan, maOder);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraMonAsync(string MaMon, string maBan, int maOder) {
            return base.Channel.kiemTraMonAsync(MaMon, maBan, maOder);
        }
        
        public bool kiemTraGoiMon(int maOder) {
            return base.Channel.kiemTraGoiMon(maOder);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraGoiMonAsync(int maOder) {
            return base.Channel.kiemTraGoiMonAsync(maOder);
        }
        
        public bool kiemTraBan(int soBan) {
            return base.Channel.kiemTraBan(soBan);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraBanAsync(int soBan) {
            return base.Channel.kiemTraBanAsync(soBan);
        }
        
        public string layDVT(string maMon) {
            return base.Channel.layDVT(maMon);
        }
        
        public System.Threading.Tasks.Task<string> layDVTAsync(string maMon) {
            return base.Channel.layDVTAsync(maMon);
        }
        
        public string laySoBan(string MaBan) {
            return base.Channel.laySoBan(MaBan);
        }
        
        public System.Threading.Tasks.Task<string> laySoBanAsync(string MaBan) {
            return base.Channel.laySoBanAsync(MaBan);
        }
        
        public string laySLMon(string maMon, string maBan) {
            return base.Channel.laySLMon(maMon, maBan);
        }
        
        public System.Threading.Tasks.Task<string> laySLMonAsync(string maMon, string maBan) {
            return base.Channel.laySLMonAsync(maMon, maBan);
        }
        
        public bool ThemCTOder(DTO_QLCP.CTOder ct) {
            return base.Channel.ThemCTOder(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTOderAsync(DTO_QLCP.CTOder ct) {
            return base.Channel.ThemCTOderAsync(ct);
        }
        
        public bool NhapSoLuong(DTO_QLCP.CTOder ct) {
            return base.Channel.NhapSoLuong(ct);
        }
        
        public System.Threading.Tasks.Task<bool> NhapSoLuongAsync(DTO_QLCP.CTOder ct) {
            return base.Channel.NhapSoLuongAsync(ct);
        }
        
        public bool XoaMon(DTO_QLCP.CTOder ct) {
            return base.Channel.XoaMon(ct);
        }
        
        public System.Threading.Tasks.Task<bool> XoaMonAsync(DTO_QLCP.CTOder ct) {
            return base.Channel.XoaMonAsync(ct);
        }
        
        public bool XoaCTOder(DTO_QLCP.CTOder ct) {
            return base.Channel.XoaCTOder(ct);
        }
        
        public System.Threading.Tasks.Task<bool> XoaCTOderAsync(DTO_QLCP.CTOder ct) {
            return base.Channel.XoaCTOderAsync(ct);
        }
        
        public bool ChuyenBan(DTO_QLCP.CTOder ct) {
            return base.Channel.ChuyenBan(ct);
        }
        
        public System.Threading.Tasks.Task<bool> ChuyenBanAsync(DTO_QLCP.CTOder ct) {
            return base.Channel.ChuyenBanAsync(ct);
        }
        
        public string layMaMon(string maOrder) {
            return base.Channel.layMaMon(maOrder);
        }
        
        public System.Threading.Tasks.Task<string> layMaMonAsync(string maOrder) {
            return base.Channel.layMaMonAsync(maOrder);
        }
    }
}
